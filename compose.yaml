services:
  redpanda1:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.1
    container_name: redpanda1
    command:
      - redpanda
      - start
      - --node-id 1
      - --overprovisioned
      - --smp 1
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda1:9092,OUTSIDE://localhost:19092
      - --rpc-addr 0.0.0.0:33145
      - --advertise-rpc-addr redpanda1:33145
      - --set enable_rack_awareness=true
      - --set redpanda.rack=A
    ports:
      - 19092:19092 # Kafka API port
      - 18081:8081  # Schema registry port
      - 19644:9644  # Admin and metrics
  redpanda2:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.1
    container_name: redpanda2
    command:
      - redpanda
      - start
      - --node-id 2
      - --overprovisioned
      - --smp 1
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda2:9092,OUTSIDE://localhost:29092
      - --rpc-addr 0.0.0.0:33146
      - --advertise-rpc-addr redpanda2:33146
      - --seeds redpanda1:33145
      - --set enable_rack_awareness=true
      - --set redpanda.rack=B
    ports:
      - 29092:29092
      - 28081:8081
      - 29644:9644
    depends_on:
      - redpanda1
  redpanda3:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.1
    container_name: redpanda3
    command:
      - redpanda
      - start
      - --node-id 3
      - --overprovisioned
      - --smp 1
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:39092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda3:9092,OUTSIDE://localhost:39092
      - --rpc-addr 0.0.0.0:33147
      - --advertise-rpc-addr redpanda3:33147
      - --seeds redpanda1:33145
      - --set enable_rack_awareness=true
      - --set redpanda.rack=C
    ports:
      - 39092:39092
      - 38081:8081
      - 39644:9644
    depends_on:
      - redpanda1
      - redpanda2
  connect:
    image: docker.redpanda.com/redpandadata/connectors:1.0.0-dev-0c89fdf
    hostname: connect
    container_name: connect
    environment:
      CONNECT_CONFIGURATION: |
        key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        group.id=redpanda-connect
        offset.storage.topic=_connectors_offsets
        config.storage.topic=_connectors_configs
        status.storage.topic=_connectors_status
        config.storage.replication.factor=-1
        offset.storage.replication.factor=-1
        status.storage.replication.factor=-1
        offset.flush.interval.ms=1000
        producer.linger.ms=1
        producer.batch.size=131072
      CONNECT_BOOTSTRAP_SERVERS: redpanda1:9092,redpanda2:9092,redpanda3:9092
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms256M -Xmx256M
      CONNECT_METRICS_ENABLED: "true"
      CONNECT_TLS_ENABLED: "false"
      CONNECT_PLUGIN_PATH: "/opt/kafka/connect-plugins"
    ports:
      - 8083:8083
      - 9404:9404
    depends_on:
      - redpanda1
      - redpanda2
      - redpanda3
  console:
    image: docker.redpanda.com/redpandadata/console:v2.2.2
    container_name: redpanda-console
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        redpanda:
          adminApi:
            enabled: true
            urls:
              - "http://redpanda1:9644"
              - "http://redpanda2:9644"
              - "http://redpanda3:9644"
        kafka:
          brokers:
            - "redpanda1:9092"
            - "redpanda2:9092"
            - "redpanda3:9092"
          schemaRegistry:
            enabled: true
            urls:
              - "http://redpanda1:8081"
              - "http://redpanda2:8081"
              - "http://redpanda3:8081"
          protobuf:
            enabled: true
            schemaRegistry:
              enabled: true
              refreshInterval: 1m
        connect:
          enabled: true
          clusters:
            - name: connect
              url: http://connect:8083
          connectTimeout: 15s
          readTimeout: 60s
          requestTimeout: 6s
    ports:
      - 8080:8080
    depends_on:
      - redpanda1
      - redpanda2
      - redpanda3
      - connect
      - mysql
  mysql:
    image: debezium/example-mysql
    container_name: debezium-mysql
    environment:
      MYSQL_ROOT_PASSWORD: debezium
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpw
    ports:
      - 3306:3306
